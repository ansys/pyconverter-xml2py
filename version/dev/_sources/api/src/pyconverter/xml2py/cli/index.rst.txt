





The ``cli.py`` module
=====================

.. py:module:: src.pyconverter.xml2py.cli


Summary
-------








.. py:currentmodule:: cli
.. tab-set::







    .. tab-item:: Functions

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:obj:`~create_package`
            - Create Python package based on a XML documentation.


          * - :py:obj:`~main`
            - A Python wrapper to convert XML documentation into Python source code


          * - :py:obj:`~version`
            - Display current version.


          * - :py:obj:`~package`
            - Create a Python package from your XML documentation.

















Description
-----------

Command Line Interface for PyConverter-XML2Py.

..
    !! processed by numpydoc !!






Module detail
-------------

.. py:function:: create_package(xml_path: Union[pathlib.Path, None] = None, target_path: Union[pathlib.Path, None] = None, template_path: Union[pathlib.Path, None] = None, custom_functions_path: Union[pathlib.Path, None] = None, run_pre_commit: bool = False, max_docstring_length: int = 100) -> None

   
   Create Python package based on a XML documentation.


   :Parameters:

       **xml_path: str or Path**
           Path to the directory that contains the XML documentation to convert.

       **target_path: str or Path, optional**
           Path to the directory where you want to create the autogenerated package.
           The default value is the current working directory.

       **template_path: str or Path, optional**
           Path for the template to use. If no path is provided, the default template is used.
           The default value is the ``_package`` directory accessible in the
           `PyConverter-XML2Py GitHub repository <https://github.com/ansys/pyconverter-xml2py/tree/main/_package>`_.

       **custom_functions_path: str or Path, optional**
           Path to the directory that contains the functions that need to be customized.
           The default value is None.

       **run_pre_commit: bool, optional**
           Whether to run pre-commit hooks on the autogenerated package source code.
           The default value is ``False``.

       **max_docstring_length: int, optional**
           Maximum length of the generated docstrings.
           The default is ``100``.














   ..
       !! processed by numpydoc !!

.. py:function:: main()

   
   A Python wrapper to convert XML documentation into Python source code
   with its related Sphinx documentation.
















   ..
       !! processed by numpydoc !!

.. py:function:: version()

   
   Display current version.
















   ..
       !! processed by numpydoc !!

.. py:function:: package(xml_path: pathlib.Path, targ_path: pathlib.Path, template_path: pathlib.Path, func_path: pathlib.Path, run_pre_commit: bool, max_length: int) -> None

   
   Create a Python package from your XML documentation.
















   ..
       !! processed by numpydoc !!



