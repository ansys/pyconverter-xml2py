class Autogenerateddirectory:
    """Class that contains the version variables of the XML documentation."""

    def __init__(self, terms) -> None:
        """Class initialization."""
        self.autogenerated_directory_name = "pydita.generatedcommands"
        self.version = terms["ansys_internal_version"]
        self.base_url = f"https://ansyshelp.ansys.com/Views/Secured/corp/v{self._version}/en/"
        self.cmd_base_url = f"{self.base_url}/ans_cmd/"

    @property
    def autogenerated_directory_name(self):
        """Return the autogenerated directory name."""
        return self._autogenerated_directory_name

    @property
    def version(self):
        """Return the version of the XML documentation."""
        return self._version

    @property
    def base_url(self):
        """Return the base URL of the HTML documentation."""
        return self._base_url

    @property
    def cmd_base_url(self):
        """Return the command base URL."""
        return self._cmd_base_url

    @autogenerated_directory_name.setter
    def autogenerated_directory_name(self, directory_name):
        """Set the autogenerated directory name."""
        self._autogenerated_directory_name = directory_name

    @version.setter
    def version(self, version_value):
        """Set the version value."""
        self._version = version_value
        self._base_url = f"https://ansyshelp.ansys.com/Views/Secured/corp/v{self._version}/en/"

    @base_url.setter
    def base_url(self, url):
        """Set the base URL."""
        self._base_url = url
        self._cmd_base_url = f"{self._base_url}/ans_cmd/"

    @cmd_base_url.setter
    def cmd_base_url(self, base_url):
        """Set the command base URL."""
        self._cmd_base_url = base_url
