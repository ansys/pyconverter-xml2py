# check spelling, codestyle
name: GitHub CI for the autogenerated library

# run only on main branch.  This avoids duplicated actions on PRs
on:
  workflow_dispatch:
  schedule: # UTC at 0300
    - cron: "0 3 * * *"
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
    paths:
      - '../autodoc_cicd.yml'

env:
  MAIN_PYTHON_VERSION: '3.9'
  PACKAGE_NAME: 'pydita-generatedcommands'
  PACKAGE_NAMESPACE: 'pydita.generatedcommands'
  RESET_PIP_CACHE_2: 0
  RESET_AUTOSUMMARY_CACHE_2: 0
  RESET_DOC_BUILD_CACHE_2: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  generate-code:
    name: Autogenerated library
    runs-on: ubuntu-latest
    steps:
        # This checkout is repeated later at the 'doc-build' action. This could be avoided by copything the sh file here, but introduces some code duplicity.
      - name: "Install Git and checkout project"
        uses: actions/checkout@v3

      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      
      - name: "Cache pip"
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: Python-pydita-generatedcommands-v${{ env.RESET_PIP_CACHE_2 }}-Linux-${{ env.MAIN_PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            Python-pydita-generatedcommands-v${{ env.RESET_PIP_CACHE_2 }}-Linux-${{ env.MAIN_PYTHON_VERSION }}
      
      # The token will expire in 2024.
      - name: "Checkout mapdl-cmd-doc repository"
        uses: actions/checkout@v3
        with:
          repository: pyansys/mapdl-cmd-doc
          ref: feat/pydita-ast-predined-format
          token: ${{ secrets.MAPDL_CMD_DOC_TOKEN }}
          path: mapdl-cmd-doc
      
      - name: "Install pydita-ast"
        run: |
          pip install .
      
      - name: "Create pydita-autogenerated doc"
        run: |
          python ./xml2rst.py -p ${{ github.workspace }}/mapdl-cmd-doc
      
      - name: Upload autogenerated doc artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: ./package


  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    needs: [generate-code]
    steps:
      - name: Download autogenerated documentation
        uses: actions/download-artifact@v3
        with:
          name: package
      
      - name: Test download artifacts
        run: ls -R -a

      - name: PyAnsys code style checks
        uses: pyansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          use-python-cache: false


  auto-doc-build:
    name: Building autogenerated documentation
    runs-on: ubuntu-latest
    needs: [code-style]
    steps:
      - name: Download autogenerated documentation
        uses: actions/download-artifact@v3
        with:
          name: package
      
      - name: "Cache pip"
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: Python-pydita-generatedcommands-v${{ env.RESET_PIP_CACHE_2 }}-Linux-${{ env.MAIN_PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            Python-pydita-generatedcommands-v${{ env.RESET_PIP_CACHE_2 }}-Linux-${{ env.MAIN_PYTHON_VERSION }}
      
      - name: "Install pydita-generatedcommands"
        run: |
          pip install .
      
      - name: "Retrieve PyDita-Generatedcommands version"
        run: |
          echo "PYDITA_GENERATED_VERSION=$(python -c 'from pydita.generatedcommands import __version__; print(__version__)')" >> $GITHUB_ENV
          echo "PyDita-Generatedcommands version is: $(python -c 'from pydita.generatedcommands import __version__; print(__version__)')"

      - name: "Cache docs build directory"
        uses: actions/cache@v3
        with:
          path: doc/_build
          key: doc-build-pydita-generatedcommands-v${{ env.RESET_DOC_BUILD_CACHE_2 }}-${{ env.PYDITA_GENERATED_VERSION }}-${{ github.sha }}
          restore-keys: |
            doc-build-pydita-generatedcommands-v${{ env.RESET_DOC_BUILD_CACHE_2 }}-${{ env.PYDITA_GENERATED_VERSION }}

      - name: "Cache autosummary"
        uses: actions/cache@v3
        with:
          path: doc/source/_autosummary/*.rst
          key: autosummary-pydita-generatedcommands-v${{ env.RESET_AUTOSUMMARY_CACHE_2 }}-${{ env.PYDITA_GENERATED_VERSION }}-${{ github.sha }}
          restore-keys: |
            autosummary-pydita-generatedcommands-v${{ env.RESET_AUTOSUMMARY_CACHE_2 }}-${{ env.PYDITA_GENERATED_VERSION }}

      - name: "Run Ansys documentation building action"
        uses: pyansys/actions/doc-build@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          checkout: false
          sphinxopts: -j auto
